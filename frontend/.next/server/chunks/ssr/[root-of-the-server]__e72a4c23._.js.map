{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///E:/internshala-assignments/Real-Time-Chat/frontend/app/login/page.tsx"],"sourcesContent":["// app/login/page.tsx\r\n\"use client\";\r\n\r\nimport { useState, ChangeEvent, FormEvent } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { useRouter, useSearchParams } from \"next/navigation\";\r\nimport { AuthFormData, AuthErrors } from \"@/types/auth\";\r\nimport { collectSegmentData } from \"next/dist/server/app-render/collect-segment-data\";\r\n\r\nexport default function Login() {\r\n  const router = useRouter();\r\n  const searchParams = useSearchParams();\r\n  const message = searchParams.get(\"message\");\r\n\r\n  const [formData, setFormData] = useState<AuthFormData>({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState<AuthErrors>({});\r\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n\r\n    // Clear error when user types\r\n    if (errors[name as keyof AuthErrors]) {\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        [name]: \"\",\r\n      }));\r\n    }\r\n  };\r\n\r\n  const validateForm = (): boolean => {\r\n    const newErrors: AuthErrors = {};\r\n\r\n    // Email validation\r\n    if (!formData.email.trim()) {\r\n      newErrors.email = \"Email is required\";\r\n    } else if (!/^\\S+@\\S+\\.\\S+$/.test(formData.email)) {\r\n      newErrors.email = \"Please enter a valid email address\";\r\n    }\r\n\r\n    // Password validation\r\n    if (!formData.password) {\r\n      newErrors.password = \"Password is required\";\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>): Promise<void> => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) return;\r\n\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/users/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email: formData.email.toLowerCase().trim(),\r\n          password: formData.password,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(data);\r\n      if (response.ok) {\r\n        localStorage.setItem(\"token\", data.token);\r\n        sessionStorage.setItem(\"user\", JSON.stringify(data.user));\r\n        router.push(\"/dashboard\");\r\n      } else {\r\n        setErrors({ submit: data.message || \"Login failed\" });\r\n      }\r\n    } catch (error) {\r\n      setErrors({ submit: \"An error occurred. Please try again.\" });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Helper function to conditionally apply class names\r\n  const getInputClassName = (fieldName: keyof AuthErrors): string => {\r\n    const baseClass =\r\n      \"appearance-none rounded-none relative block w-full px-3 py-2 border placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\";\r\n    const errorClass = errors[fieldName] ? \"border-red-500\" : \"border-gray-300\";\r\n\r\n    return `${baseClass} ${errorClass}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div>\r\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n            Sign in to your account\r\n          </h2>\r\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\r\n            Or{\" \"}\r\n            <Link\r\n              href=\"/register\"\r\n              className=\"font-medium text-indigo-600 hover:text-indigo-500\"\r\n            >\r\n              create a new account\r\n            </Link>\r\n          </p>\r\n        </div>\r\n\r\n        {message && (\r\n          <div className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded\">\r\n            {message}\r\n          </div>\r\n        )}\r\n\r\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\r\n          {errors.submit && (\r\n            <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\r\n              {errors.submit}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"rounded-md shadow-sm -space-y-px\">\r\n            <div>\r\n              <label\r\n                htmlFor=\"email\"\r\n                className=\"block text-sm font-medium text-gray-700\"\r\n              >\r\n                Email address\r\n              </label>\r\n              <input\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                required\r\n                className={getInputClassName(\"email\") + \" rounded-t-md\"}\r\n                placeholder=\"Email address\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n              />\r\n              {errors.email && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{errors.email}</p>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <label\r\n                htmlFor=\"password\"\r\n                className=\"block text-sm font-medium text-gray-700\"\r\n              >\r\n                Password\r\n              </label>\r\n              <input\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                required\r\n                className={getInputClassName(\"password\") + \" rounded-b-md\"}\r\n                placeholder=\"Password\"\r\n                value={formData.password}\r\n                onChange={handleChange}\r\n              />\r\n              {errors.password && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{errors.password}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center\">\r\n              <input\r\n                id=\"remember-me\"\r\n                name=\"remember-me\"\r\n                type=\"checkbox\"\r\n                className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\r\n              />\r\n              <label\r\n                htmlFor=\"remember-me\"\r\n                className=\"ml-2 block text-sm text-gray-900\"\r\n              >\r\n                Remember me\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"text-sm\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"font-medium text-indigo-600 hover:text-indigo-500\"\r\n              >\r\n                Forgot your password?\r\n              </a>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\r\n            >\r\n              {isSubmitting ? \"Signing in...\" : \"Sign in\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}